-- ==========================================
-- SCRIPT 4 : Ajouter l'utilisateur admin
-- √Ä ex√©cuter APR√àS vous √™tre inscrit dans l'app
-- ==========================================

-- √âTAPE 1 : D'ABORD, inscrivez-vous dans l'app avec jonathan.valsaque@gmail.com
-- √âTAPE 2 : Ensuite, ex√©cutez ce script

-- V√©rifier si l'utilisateur existe dans auth.users
DO $$
DECLARE
  user_exists BOOLEAN;
  user_id_var UUID;
BEGIN
  -- Chercher l'utilisateur
  SELECT EXISTS(
    SELECT 1 FROM auth.users WHERE email = 'jonathan.valsaque@gmail.com'
  ) INTO user_exists;

  IF NOT user_exists THEN
    RAISE NOTICE '‚ùå ERREUR : Utilisateur jonathan.valsaque@gmail.com non trouv√© !';
    RAISE NOTICE 'üëâ ACTION REQUISE : Inscrivez-vous d''abord dans l''app avec cet email';
    RAISE EXCEPTION 'Utilisateur non trouv√©. Inscrivez-vous d''abord dans l''app.';
  ELSE
    -- R√©cup√©rer l'ID de l'utilisateur
    SELECT id INTO user_id_var FROM auth.users WHERE email = 'jonathan.valsaque@gmail.com';
    
    -- Ajouter l'utilisateur dans la table users si pas d√©j√† fait
    INSERT INTO users (id, email, username)
    VALUES (user_id_var, 'jonathan.valsaque@gmail.com', 'Admin')
    ON CONFLICT (id) DO UPDATE SET email = 'jonathan.valsaque@gmail.com';
    
    -- Ajouter comme admin
    INSERT INTO admins (user_id, email)
    VALUES (user_id_var, 'jonathan.valsaque@gmail.com')
    ON CONFLICT (email) DO NOTHING;
    
    RAISE NOTICE '‚úÖ SUCC√àS : jonathan.valsaque@gmail.com est maintenant admin !';
    RAISE NOTICE 'üîê Vous pouvez maintenant acc√©der aux interfaces admin';
  END IF;
END $$;

-- V√©rifier le r√©sultat
SELECT 
  'Admin configur√©' as status,
  a.email,
  a.created_at as "Admin depuis"
FROM admins a
WHERE a.email = 'jonathan.valsaque@gmail.com';

-- Test de la fonction is_admin (optionnel)
-- SELECT is_admin() as "Suis-je admin ?";