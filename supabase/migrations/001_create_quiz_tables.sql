-- Migration: Cr√©ation des tables pour le syst√®me de quiz
-- Date: 2025-08-22
-- Description: Tables pour questions, sessions, r√©ponses, d√©fis quotidiens, classements et succ√®s

-- =====================================================
-- 1. TABLE DES QUESTIONS
-- =====================================================
CREATE TABLE IF NOT EXISTS questions (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  theme VARCHAR(50) NOT NULL,
  sub_theme VARCHAR(100) NOT NULL,
  question TEXT NOT NULL,
  image_url TEXT,
  type VARCHAR(20) DEFAULT 'single' CHECK (type IN ('single', 'multiple')),
  difficulty VARCHAR(20) DEFAULT 'medium' CHECK (difficulty IN ('easy', 'medium', 'hard')),
  points INTEGER DEFAULT 1,
  explanation TEXT,
  answers JSONB NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

COMMENT ON TABLE questions IS 'Table des questions du quiz';
COMMENT ON COLUMN questions.theme IS 'Th√®me principal: math, french, profession';
COMMENT ON COLUMN questions.sub_theme IS 'Sous-th√®me: geometry, grammar, operations, etc.';
COMMENT ON COLUMN questions.type IS 'Type de question: single (QCU) ou multiple (QCM)';
COMMENT ON COLUMN questions.answers IS 'Format JSON: [{id, text, isCorrect}]';

-- =====================================================
-- 2. TABLE DES SESSIONS
-- =====================================================
CREATE TABLE IF NOT EXISTS sessions (
  id VARCHAR(255) PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  config JSONB NOT NULL,
  score DECIMAL(5,2),
  points_earned INTEGER DEFAULT 0,
  started_at TIMESTAMPTZ DEFAULT NOW(),
  completed_at TIMESTAMPTZ,
  status VARCHAR(20) DEFAULT 'in_progress' CHECK (status IN ('in_progress', 'completed', 'abandoned')),
  created_at TIMESTAMPTZ DEFAULT NOW()
);

COMMENT ON TABLE sessions IS 'Sessions de quiz des utilisateurs';
COMMENT ON COLUMN sessions.config IS 'Configuration de la session: th√®mes, timer, bar√®me, etc.';

-- =====================================================
-- 3. TABLE DES R√âPONSES DE SESSION
-- =====================================================
CREATE TABLE IF NOT EXISTS session_answers (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  session_id VARCHAR(255) REFERENCES sessions(id) ON DELETE CASCADE,
  question_id UUID REFERENCES questions(id) ON DELETE CASCADE,
  selected_answers JSONB,
  time_spent DECIMAL(10,2),
  is_correct BOOLEAN DEFAULT FALSE,
  is_partial BOOLEAN DEFAULT FALSE,
  is_skipped BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

COMMENT ON TABLE session_answers IS 'R√©ponses donn√©es pendant une session';

-- =====================================================
-- 4. TABLE DES D√âFIS QUOTIDIENS
-- =====================================================
CREATE TABLE IF NOT EXISTS daily_challenges (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  date DATE DEFAULT CURRENT_DATE UNIQUE,
  question_ids UUID[] NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

COMMENT ON TABLE daily_challenges IS 'Questions du d√©fi quotidien';

-- =====================================================
-- 5. TABLE DES COMPL√âTIONS DE D√âFIS
-- =====================================================
CREATE TABLE IF NOT EXISTS daily_challenge_completions (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  challenge_date DATE DEFAULT CURRENT_DATE,
  session_id VARCHAR(255) REFERENCES sessions(id) ON DELETE CASCADE,
  score DECIMAL(5,2),
  points_earned INTEGER DEFAULT 0,
  completed_at TIMESTAMPTZ DEFAULT NOW(),
  UNIQUE(user_id, challenge_date)
);

COMMENT ON TABLE daily_challenge_completions IS 'D√©fis quotidiens compl√©t√©s par utilisateur';

-- =====================================================
-- 6. TABLE DES CLASSEMENTS
-- =====================================================
CREATE TABLE IF NOT EXISTS leaderboard (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  period_type VARCHAR(20) CHECK (period_type IN ('daily', 'weekly', 'monthly', 'all_time')),
  period_date DATE,
  score DECIMAL(10,2) DEFAULT 0,
  sessions_count INTEGER DEFAULT 0,
  total_questions INTEGER DEFAULT 0,
  correct_answers INTEGER DEFAULT 0,
  average_time DECIMAL(10,2),
  updated_at TIMESTAMPTZ DEFAULT NOW(),
  UNIQUE(user_id, period_type, period_date)
);

COMMENT ON TABLE leaderboard IS 'Classements par p√©riode';

-- =====================================================
-- 7. TABLE DES SUCC√àS (ACHIEVEMENTS)
-- =====================================================
CREATE TABLE IF NOT EXISTS achievements (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  code VARCHAR(100) UNIQUE NOT NULL,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  icon VARCHAR(10),
  points_reward INTEGER DEFAULT 0,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

COMMENT ON TABLE achievements IS 'Liste des succ√®s disponibles';

-- =====================================================
-- 8. TABLE DES SUCC√àS UTILISATEUR
-- =====================================================
CREATE TABLE IF NOT EXISTS user_achievements (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  achievement_id UUID REFERENCES achievements(id) ON DELETE CASCADE,
  unlocked_at TIMESTAMPTZ DEFAULT NOW(),
  UNIQUE(user_id, achievement_id)
);

COMMENT ON TABLE user_achievements IS 'Succ√®s d√©bloqu√©s par utilisateur';

-- =====================================================
-- 9. MISE √Ä JOUR DE LA TABLE PROFILES
-- =====================================================
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS current_grade INTEGER DEFAULT 1;
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS total_points INTEGER DEFAULT 0;
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS streak_days INTEGER DEFAULT 0;
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS last_activity_date DATE;
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS best_score DECIMAL(5,2) DEFAULT 0;
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS total_sessions INTEGER DEFAULT 0;
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS total_questions_answered INTEGER DEFAULT 0;
ALTER TABLE profiles ADD COLUMN IF NOT EXISTS correct_answers INTEGER DEFAULT 0;

-- =====================================================
-- 10. CR√âATION DES INDEX
-- =====================================================
CREATE INDEX IF NOT EXISTS idx_questions_theme ON questions(theme);
CREATE INDEX IF NOT EXISTS idx_questions_sub_theme ON questions(sub_theme);
CREATE INDEX IF NOT EXISTS idx_questions_difficulty ON questions(difficulty);
CREATE INDEX IF NOT EXISTS idx_sessions_user_id ON sessions(user_id);
CREATE INDEX IF NOT EXISTS idx_sessions_status ON sessions(status);
CREATE INDEX IF NOT EXISTS idx_session_answers_session_id ON session_answers(session_id);
CREATE INDEX IF NOT EXISTS idx_leaderboard_period ON leaderboard(period_type, period_date);
CREATE INDEX IF NOT EXISTS idx_daily_challenges_date ON daily_challenges(date);

-- =====================================================
-- 11. TRIGGER POUR MISE √Ä JOUR AUTOMATIQUE
-- =====================================================
CREATE OR REPLACE FUNCTION update_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_questions_updated_at
  BEFORE UPDATE ON questions
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at();

-- =====================================================
-- 12. INSERTION DES SUCC√àS DE BASE
-- =====================================================
INSERT INTO achievements (code, name, description, icon, points_reward) VALUES
  ('first_perfect_score', 'Premi√®re Perfection', 'Obtenir 100% √† un quiz', 'üíØ', 50),
  ('week_streak', 'Semaine de Feu', 'Maintenir un streak de 7 jours', 'üî•', 25),
  ('month_streak', 'Mois L√©gendaire', 'Maintenir un streak de 30 jours', 'üåü', 100),
  ('speed_demon', 'D√©mon de Vitesse', 'R√©pondre √† toutes les questions en moins de 3 secondes', '‚ö°', 30),
  ('marathon_runner', 'Marathonien', 'Compl√©ter 100 questions d''affil√©e', 'üèÉ', 40),
  ('math_master', 'Ma√Ætre des Maths', '100% de r√©ussite en Math√©matiques', 'üìê', 60),
  ('french_expert', 'Expert en Fran√ßais', '100% de r√©ussite en Fran√ßais', 'üìö', 60),
  ('profession_guru', 'Guru du M√©tier', '100% de r√©ussite en M√©tier', 'üöí', 60),
  ('all_themes_unlocked', 'Polyvalent', 'R√©ussir tous les th√®mes', 'üéØ', 75),
  ('daily_champion', 'Champion du Jour', 'Meilleur score du d√©fi quotidien', 'üèÜ', 35),
  ('beginner', 'D√©butant', 'Compl√©ter votre premi√®re session', 'üéì', 10),
  ('regular', 'R√©gulier', 'Compl√©ter 10 sessions', '‚≠ê', 20),
  ('expert', 'Expert', 'Compl√©ter 50 sessions', 'üíé', 50),
  ('legend', 'L√©gende', 'Compl√©ter 100 sessions', 'üëë', 100)
ON CONFLICT (code) DO NOTHING;

-- =====================================================
-- 13. INSERTION DE QUESTIONS D'EXEMPLE
-- =====================================================
INSERT INTO questions (theme, sub_theme, question, type, difficulty, points, answers, explanation) VALUES
  -- Math√©matiques
  ('math', 'geometry', 'Quelle est la formule pour calculer l''aire d''un cercle ?', 'single', 'easy', 1,
   '[{"id": "a", "text": "œÄr¬≤", "isCorrect": true},
     {"id": "b", "text": "2œÄr", "isCorrect": false},
     {"id": "c", "text": "œÄd", "isCorrect": false},
     {"id": "d", "text": "r¬≤/œÄ", "isCorrect": false}]',
   'L''aire d''un cercle se calcule avec la formule A = œÄr¬≤ o√π r est le rayon.'),
   
  ('math', 'percentage', 'Un article co√ªte 80‚Ç¨. Il est sold√© √† -25%. Quel est son nouveau prix ?', 'single', 'easy', 1,
   '[{"id": "a", "text": "60‚Ç¨", "isCorrect": true},
     {"id": "b", "text": "55‚Ç¨", "isCorrect": false},
     {"id": "c", "text": "65‚Ç¨", "isCorrect": false},
     {"id": "d", "text": "70‚Ç¨", "isCorrect": false}]',
   '80‚Ç¨ √ó 0.75 = 60‚Ç¨ (ou 80‚Ç¨ - 20‚Ç¨ = 60‚Ç¨)'),

  -- Fran√ßais
  ('french', 'grammar', 'Quel est le participe pass√© du verbe "acqu√©rir" ?', 'single', 'medium', 1,
   '[{"id": "a", "text": "Acquis", "isCorrect": true},
     {"id": "b", "text": "Acqu√©ri", "isCorrect": false},
     {"id": "c", "text": "Acquiert", "isCorrect": false},
     {"id": "d", "text": "Acqueru", "isCorrect": false}]',
   'Le participe pass√© du verbe "acqu√©rir" est "acquis".'),

  -- M√©tier
  ('profession', 'operations', 'Quels sont les √©l√©ments essentiels d''une reconnaissance op√©rationnelle ?', 'multiple', 'medium', 2,
   '[{"id": "a", "text": "√âvaluation des risques", "isCorrect": true},
     {"id": "b", "text": "Identification des victimes", "isCorrect": true},
     {"id": "c", "text": "Mise en place du p√©rim√®tre", "isCorrect": true},
     {"id": "d", "text": "R√©daction du rapport", "isCorrect": false}]',
   'La reconnaissance op√©rationnelle comprend l''√©valuation des risques, l''identification des victimes et la mise en place du p√©rim√®tre de s√©curit√©.'),

  ('profession', 'first-aid', 'Quelle est la fr√©quence des compressions thoraciques lors d''un massage cardiaque ?', 'single', 'easy', 1,
   '[{"id": "a", "text": "100 √† 120 par minute", "isCorrect": true},
     {"id": "b", "text": "60 √† 80 par minute", "isCorrect": false},
     {"id": "c", "text": "140 √† 160 par minute", "isCorrect": false},
     {"id": "d", "text": "80 √† 100 par minute", "isCorrect": false}]',
   'Les compressions thoraciques doivent √™tre effectu√©es √† une fr√©quence de 100 √† 120 par minute.');

-- =====================================================
-- 14. RLS (Row Level Security)
-- =====================================================

-- Activer RLS sur toutes les tables
ALTER TABLE questions ENABLE ROW LEVEL SECURITY;
ALTER TABLE sessions ENABLE ROW LEVEL SECURITY;
ALTER TABLE session_answers ENABLE ROW LEVEL SECURITY;
ALTER TABLE daily_challenges ENABLE ROW LEVEL SECURITY;
ALTER TABLE daily_challenge_completions ENABLE ROW LEVEL SECURITY;
ALTER TABLE leaderboard ENABLE ROW LEVEL SECURITY;
ALTER TABLE achievements ENABLE ROW LEVEL SECURITY;
ALTER TABLE user_achievements ENABLE ROW LEVEL SECURITY;

-- Policies pour questions (lecture publique)
CREATE POLICY "Questions visibles par tous" ON questions
  FOR SELECT USING (true);

-- Policies pour sessions (utilisateur peut voir/cr√©er ses propres sessions)
CREATE POLICY "Utilisateur peut voir ses sessions" ON sessions
  FOR SELECT USING (auth.uid() = user_id OR user_id IS NULL);

CREATE POLICY "Utilisateur peut cr√©er ses sessions" ON sessions
  FOR INSERT WITH CHECK (auth.uid() = user_id OR user_id IS NULL);

CREATE POLICY "Utilisateur peut modifier ses sessions" ON sessions
  FOR UPDATE USING (auth.uid() = user_id OR user_id IS NULL);

-- Policies pour session_answers
CREATE POLICY "Utilisateur peut voir ses r√©ponses" ON session_answers
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM sessions 
      WHERE sessions.id = session_answers.session_id 
      AND (sessions.user_id = auth.uid() OR sessions.user_id IS NULL)
    )
  );

CREATE POLICY "Utilisateur peut cr√©er ses r√©ponses" ON session_answers
  FOR INSERT WITH CHECK (
    EXISTS (
      SELECT 1 FROM sessions 
      WHERE sessions.id = session_answers.session_id 
      AND (sessions.user_id = auth.uid() OR sessions.user_id IS NULL)
    )
  );

-- Policies pour daily_challenges (lecture publique)
CREATE POLICY "D√©fis quotidiens visibles par tous" ON daily_challenges
  FOR SELECT USING (true);

-- Policies pour daily_challenge_completions
CREATE POLICY "Utilisateur peut voir ses compl√©tions" ON daily_challenge_completions
  FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Utilisateur peut cr√©er ses compl√©tions" ON daily_challenge_completions
  FOR INSERT WITH CHECK (auth.uid() = user_id);

-- Policies pour leaderboard (lecture publique)
CREATE POLICY "Classements visibles par tous" ON leaderboard
  FOR SELECT USING (true);

-- Policies pour achievements (lecture publique)
CREATE POLICY "Succ√®s visibles par tous" ON achievements
  FOR SELECT USING (true);

-- Policies pour user_achievements
CREATE POLICY "Utilisateur peut voir ses succ√®s" ON user_achievements
  FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Utilisateur peut d√©bloquer des succ√®s" ON user_achievements
  FOR INSERT WITH CHECK (auth.uid() = user_id);